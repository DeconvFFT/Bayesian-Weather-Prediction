"0","sample_data = sample_n(weather.df1, 500) %>% dplyr::select(apparent_temperature,temperature,humidity,visibility, wind_speed, wind_degrees)"
"0",""
"0","#splitting training and validation set from the sampled data"
"0","sample <- sample(c(TRUE, FALSE), nrow(sample_data), replace=TRUE, prob=c(0.7,0.3))"
"0","weather.df = sample_data[sample,]"
"0","test.df = sample_data[!sample,]"
"0","dim(weather.df)"
"1","[1]"
"1"," 335"
"1","   6"
"1","
"
"0","dim(test.df)"
"1","[1]"
"1"," 165"
"1","   6"
"1","
"
"0","#Bayesian linear regression using default priors"
"0",""
"0","X = model.matrix(apparent_temperature ~ ., weather.df)"
"0","y = weather.df$apparent_temperature"
"0","n = nrow(weather.df)"
"0",""
"0","#setting prior values using OLS"
"0","a = solve(t(X) %*% X)"
"0","b = t(X) %*% y"
"0","beta_0 = a %*% b"
"0","SSR_beta_0 = t(y - X%*%beta_0) %*% (y - X%*%beta_0)"
"0","sigma_20 = SSR_beta_0/(n - p)"
"0","nu_0 = 1"
"0","cov_0 = (t(X) %*% X)/as.vector(n*sigma_20)"
"0",""
"0","trace <- list(s2 = numeric(nSamples), beta = array(NA, dim=c(nSamples,6)))"
"0",""
"0","for (i in 1:nSamples){"
"0","  s2 <- 1/rgamma(n=1, shape = (nu_0+n)/2, rate = (nu_0*sigma_20 + SSR_beta_0)/2)"
"0","  beta <- mvrnorm(n=1, mu = beta_0, Sigma = s2 * a)"
"0","  trace$s2[i] <- s2"
"0","  trace$beta[i,] <- beta"
"0","}"
"0",""
"0","signif.df <- plyr::aaply(trace$beta, 2, function(b) {"
"0","  quantile(b, c(.025, .975))"
"0","}) %>% "
"0","  as.data.frame() %>% "
"0","  dplyr::mutate(covariate = factor(c('intercept', colnames(weather.df[-1])), "
"0","                                   levels = c('intercept',"
"0","                                              colnames(weather.df[-1]))))"
"0","ggplot(signif.df) + "
"0","  geom_errorbar(aes(x = covariate, ymin = `2.5%`, ymax = `97.5%`)) + "
"0","  geom_abline(slope = 0, colour = 'red') + "
"0","  labs(title = '95% CI of coefficients')"
