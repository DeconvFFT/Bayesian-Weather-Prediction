"0","sample_data = sample_n(weather.df1, 500) %>% dplyr::select(apparent_temperature, temperature, wind_speed)"
"0",""
"0","#splitting training and validation set from the sampled data"
"0","sample <- sample(c(TRUE, FALSE), nrow(sample_data), replace=TRUE, prob=c(0.7,0.3))"
"0","weather.df = sample_data[sample,]"
"0","test.df = sample_data[!sample,]"
"0",""
"0","X <- model.matrix(apparent_temperature ~ ., weather.df)"
"0","n <- nrow(X)"
"0","y <- weather.df$apparent_temperature"
"0","a = solve(t(X) %*% X)"
"0","b = t(X) %*% y"
"0","beta_0 = a %*% b"
"0","SSR_beta_0 = t(y - X%*%beta_0) %*% (y - X%*%beta_0)"
"0","sigma_20 = SSR_beta_0/(n - p)"
"0","nu_0 = 1"
"0","cov_0 = (t(X) %*% X)/as.vector(n*sigma_20)"
"0",""
"0","trace <- list(s2 = numeric(nSamples), beta = array(NA, dim=c(nSamples,3)))"
"0",""
"0","for (i in 1:nSamples){"
"0","  s2 <- 1/rgamma(n=1, shape = (nu_0+n)/2, rate = (nu_0*sigma_20 + SSR_beta_0)/2)"
"0","  beta <- mvrnorm(n=1, mu = beta_0, Sigma = s2 * a)"
"0","  trace$s2[i] <- s2"
"0","  trace$beta[i,] <- beta"
"0","}"
"0",""
"0","#testing our values on the validation data"
"0","test.df.matrix = model.matrix(apparent_temperature ~ ., test.df)"
"0","y_actual.test = test.df$apparent_temperature"
"0","beta.means = apply(trace$beta, FUN = mean, MARGIN = 2)"
"0","y_hat.test = test.df.matrix %*% beta.means"
"0","sq_error_default = mean((as.vector(y_actual.test) - as.vector(y_hat.test)) ** 2)"
"0",""
"0","#plotting the predicted and actual values"
"0","ggplot() + "
"0","  geom_point(aes(x = test.df$apparent_temperature, y = y_hat.test)) + "
"0","  geom_abline(colour = 'red') + "
"0","  labs(x = 'observed', y = 'predicted')"
